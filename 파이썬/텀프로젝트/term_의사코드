총자산(total_price)= 0

수입내용 저장:
    try:
        수입내역 장부파일을 연다.
        파일에 text칸에 있는 수입 내역을 적는다.
        .분류(옵션메뉴)를 초기화한다
        금액칸의 내용을 지운다.
        text칸에 수입 내역을 지운다
    except Exception as ex:
        오류창에 ("Error!","Can't write to the file"파일이름)을 띄운다.

지출내용 저장:
    try:
        지출내역 장부파일을 연다.
        파일에 text칸에 있는 지출 내역을 적는다.
        분류(옵션메뉴)를 초기화한다
        금액칸의 내용을 지운다.
        text칸에 지출 내역을 지운다.
    except Exception as ex:
        오류창에 ("Error!","Can't write to the file"파일이름)을 띄운다.

수입 버튼 이벤트:
    수입 버튼을 노랑색으로 바꾼다.
    지출 버튼을 하얀색으로 바꾼다.
    자산 변경 버튼을 하얀색으로 바꾼다.
    frame3번에 위치한 위젯을 감춘다
    frame4번에 위치한 위젯을 감춘다
    frame6번에 위치한 위젯을 감춘다
    frame7번에 위치한 위젯을 감춘다
    frame2번에 위치한 위젯을 gui창에 뛰운다
    frame5번에 위치한 위젯을 gui창에 뛰운다

지출 버튼 이벤트:
    수입 버튼을 하얀색으로 바꾼다.
    지출 버튼을 노랑색으로 바꾼다.
    자산 변경 버튼을 하얀색으로 바꾼다.
    frame2번에 위치한 위젯을 감춘다
    frame4번에 위치한 위젯을 감춘다
    frame5번에 위치한 위젯을 감춘다
    frame7번에 위치한 위젯을 감춘다
    frame3번에 위치한 위젯을 gui창에 뛰운다
    frame6번에 위치한 위젯을 gui창에 뛰운다

총지출 버튼 이벤트:
    수입 버튼을 하얀색으로 바꾼다.
    지출 버튼을 하얀색으로 바꾼다.
    자산 변경 버튼을 노랑색으로 바꾼다.
    frame2번에 위치한 위젯을 감춘다
    frame3번에 위치한 위젯을 감춘다
    frame5번에 위치한 위젯을 감춘다
    frame6번에 위치한 위젯을 감춘다
    frame7번에 위치한 위젯을 감춘다
    frame4번에 위치한 위젯을 gui창에 뛰운다

파일오픈 버튼 이벤트:
    수입 버튼을 노랑색으로 바꾼다.
    지출 버튼을 하얀색으로 바꾼다.
    자산 변경 버튼을 하얀색으로 바꾼다.
    frame2번에 위치한 위젯을 감춘다
    frame3번에 위치한 위젯을 감춘다
    frame4번에 위치한 위젯을 감춘다
    frame5번에 위치한 위젯을 감춘다
    frame6번에 위치한 위젯을 감춘다
    frame7번에 위치한 위젯을 gui창에 뛰운다

날짜 선택 달력 버튼 이벤트(m):
    tkinter 애플리케이션 윈도우 생성
    윈도우 이름을 '달력'으로 설정
    윈도우크기 300x300으로 설정

    today_date=현재시간
    today_year=현재 년도
    today_month=현재 월
    today_day=현재 일

    cal=달력(today_year,today_month,today_day)해당 날짜를 기준으로 달력만듬
    달력 위아래 여백20을 둔다

    달력의 수입 날짜 입력 버튼 이벤트:
        수입 날짜 입력칸 내용을 전부 지운다
        달력에서 선택된 날짜를 지출 날짜 선택칸에 넣는다
        새로운 윈도우창을 닫는다
    
    달력의 지출 날짜 입력 버튼 이벤트:
        지출 날짜 입력칸 내용을 전부 지운다
        달력에서 선택된 날짜를 지출 날짜 선택칸에 넣는다
        새로운 윈도우창을 닫는다
    
    if m == 'input':
        수입 날짜 입력버튼 생성
    elif m == 'output'
        지출 날짜 입력버튼 생성

현 자산 가져오기:
    총자산(total_price)을 전역변수로 설정

    자산 내역 파일 오픈
    money_txt = 자산 내역 파일을 저장
    target_1=자산 내역에 저장된 자산 앞부분 단어('총자산:')
    target_2=자산 내역에 저장된 자산 뒷부분 단어('원')
    gate_1=0
    gate_2=0
    rate_1=리스트로 만든다
    rate_2=리스트로 만든다

    while gate_1>-1:
        gate_1=money_txt에서 gate_1부터 target_1에 해당하는 단어 위치를 저장
        rate_1리스트에 gate_1을 저장
        if gate_1>-1:
            gate_1+=target_1 길이 
    while gate_2>-1:
        gate_2=money_txt에서 gate_2부터 target_2에 해당하는 단어 위치를 저장
        rate_2리스트에 gate_2을 저장
        if gate_2>-1:
            gate_1+=target_2 길이 

    rate_1리스트를 거꾸로 한다
    rate_2리스트른 거꾸로 한다
    start_money=rate_1 첫번째 리스트 + 4
    end_money=rate_2 첫번째 리스트
    total_price=money_txt에서 start_money와 end_money 사이의 숫자

자산변경 이벤트:
    총자산(total_price)을 전역변수로 설정
    try:
        total_price=자산 변경 입력칸의 내용
    except Exception:
        오류창에 "Error!","자산 변경칸에 숫자만을 입력해주세요!!"출력
    자산변경 입력칸 초기화
    자산 저장 이벤트 실행
    자산 출력 이벤트 실행

자산출력 이벤트:
    총자산(total_price)을 전역변수로 설정
    gui에 (총자산+total_price+원) 출력

내용삭제 버튼 이벤트:
    text_3 안에 내용을 전부 지운다

지출 프레임 속 내용출력 버튼 이벤트:
    총자산(total_price)을 전역변수로 설정
    classification_output=지출 분류(옵션메뉴)
    try:
        money_output=금액칸 숫자
    except Exception:
        오류창에 "Error!","지출칸에 숫자만 입력해주세요!!" 출력
    tmp_output=(입력한 날짜+\n+classification_output+money_output)
    총자산-=지출
    text_1에 tmp_output을 추가한다
    분류(옵션메뉴)를 초기화한다
    금액칸의 내용을 지운다.
    날짜 입력칸 내용을 지운다
    자산 출력 이벤트 실행
    자산 저장 이벤트 실행

수입 프레임 속 내용출력 버튼 이벤트:
    총자산(total_price)을 전역변수로 설정
    classification_input=지출 분류(옵션메뉴)
    try:
        money_input=금액칸 숫자
    except Exception:
        오류창에 "Error!","지출칸에 숫자만 입력해주세요!!" 출력
    tmp_input=(입력한 날짜+\n+classification_input+money_input)
    총자산-=지출
    text_2에 tmp_input을 추가한다
    분류(옵션메뉴)를 초기화한다
    금액칸의 내용을 지운다.
    날짜 입력칸 내용을 지운다
    자산 출력 이벤트 실행
    자산 저장 이벤트 실행

파일 오픈 버튼 이벤트:
    파일 선택창을 띄워 열고자 하는 가계부 내역 파일 선택
    household_contend=선택한 파일 내용
    text칸 내용을 전부 지운다
    text칸에 선택한 파일 내용을 추가한다
    열은 파일을 닫는다

현 자산 가져오기 이벤트 실행

tkinter 애플리케이션 윈도우 설정
윈도우 이름 '가계부 프로그램'으로 설정
윈도우 650x350+500+300으로 크기와 좌표설정 
윈도창 크기 고정

#프레임 설정
프레임 구역 1~7까지 설정


지출 버튼생성

수입 버튼생성

자산변경 버튼 생성

'총자산' 라벨 생성

#지출
지출 날짜 입력칸 생성

지출 달력 버튼 생성

스트링 변수 선언
옵션메뉴를 '분류'설정
지출 분류에 해당하는 리스트를 만든다
지출 분류 리스트를 넣어 옵션메뉴 생성

지출 '금액' 라벨 생성

지출 금액 입력칸 생성

지출 '(원)' 라벨 생성

내용출력 버튼 생성

#수입
수입 날짜 입력칸 생성

수입 달력 버튼 생성

스트링 변수 선언
옵션메뉴를 '분류'설정
수입 분류에 해당하는 리스트를 만든다
수입 분류 리스트를 넣어 옵션메뉴 생성

수입 '금액' 라벨 생성

수입 금액 입력칸 생성

수입 '(원)' 라벨 생성

내용출력 버튼 생성

#자산 변겅
'총자산 변경:' 라벨 생성

금액 입력칸 생성

'(원)' 라벨 생성

자산 변경 버튼 생성

#가계부 파일 오픈
파일오픈 버튼 생성

내용삭제 버튼 생성

#내역 리스트
'지출 내용'라벨 생성
text_1=text 생성

'수입 내용'라벨 생성
text_2=text 생성

save 버튼 생성

윈도우 실행